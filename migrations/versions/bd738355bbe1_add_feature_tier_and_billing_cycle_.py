"""Add feature_tier and billing_cycle columns to separate concepts

Revision ID: bd738355bbe1
Revises: 9a37f16d872a
Create Date: 2025-07-19 22:28:57.084163

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bd738355bbe1'
down_revision = '9a37f16d872a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('feature_tier', sa.Enum('BASIC', 'ADVANCED', name='subscriptiontier'), nullable=True))
        batch_op.add_column(sa.Column('billing_cycle', sa.Enum('TRIAL', 'MONTHLY', 'QUARTERLY', 'BIANNUAL', 'ANNUAL', name='billingcycle'), nullable=True))

    # ### end Alembic commands ###
    
    # Data migration: Convert existing data to separated concepts
    # Since all existing subscriptions are basic tier, we can safely assume BASIC for all
    connection = op.get_bind()
    
    # Convert legacy tier values to new separated concepts
    connection.execute(sa.text("""
        UPDATE subscriptions SET 
            feature_tier = 'BASIC',
            billing_cycle = CASE 
                WHEN tier = 'FREE_TRIAL' THEN 'TRIAL'
                WHEN tier = 'MONTHLY' THEN 'MONTHLY'
                WHEN tier = 'QUARTERLY' THEN 'QUARTERLY'
                WHEN tier = 'BIANNUAL' THEN 'BIANNUAL'
                WHEN tier = 'ANNUAL' THEN 'ANNUAL'
                ELSE 'MONTHLY'
            END
        WHERE feature_tier IS NULL OR billing_cycle IS NULL
    """))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.drop_column('billing_cycle')
        batch_op.drop_column('feature_tier')

    # ### end Alembic commands ###
